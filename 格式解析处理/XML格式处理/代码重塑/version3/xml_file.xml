<zabbix_export>
   <version>5.0</version>
   <groups>
      <group>
         <name>SNMP</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>LINUX_SNMP</template>
         <name>LINUX_SNMP</name>
         <description>the template of snmp in linux</description>
         <groups>
            <group>
               <name>SNMP</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Network Interface</name>
            </application>
            <application>
               <name>Storage</name>
            </application>
            <application>
               <name>CPU</name>
            </application>
            <application>
               <name>Memory</name>
            </application>
         </applications>
         <discovery_rules>
            <discovery_rule>
               <name>Network interfaces discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#IFOPERSTATUS},1.3.6.1.2.1.2.2.1.8,{#IFADMINSTATUS},1.3.6.1.2.1.2.2.1.7,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFDESCR},1.3.6.1.2.1.2.2.1.2,{#IFTYPE},1.3.6.1.2.1.2.2.1.3]</snmp_oid>
               <key>net.if.discovery</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#IFADMINSTATUS}</macro>
                        <value>{$NET.IF.IFADMINSTATUS.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFADMINSTATUS}</macro>
                        <value>{$NET.IF.IFADMINSTATUS.NOT_MATCHES}</value>
                        <formulaid>B</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFOPERSTATUS}</macro>
                        <value>{$NET.IF.IFOPERSTATUS.MATCHES}</value>
                        <formulaid>I</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFOPERSTATUS}</macro>
                        <value>{$NET.IF.IFOPERSTATUS.NOT_MATCHES}</value>
                        <formulaid>J</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFNAME}</macro>
                        <value>{$NET.IF.IFNAME.MATCHES}</value>
                        <formulaid>G</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFNAME}</macro>
                        <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                        <formulaid>H</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFDESCR}</macro>
                        <value>{$NET.IF.IFDESCR.MATCHES}</value>
                        <formulaid>E</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFDESCR}</macro>
                        <value>{$NET.IF.IFDESCR.NOT_MATCHES}</value>
                        <formulaid>F</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFALIAS}</macro>
                        <value>{$NET.IF.IFALIAS.MATCHES}</value>
                        <formulaid>C</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFALIAS}</macro>
                        <value>{$NET.IF.IFALIAS.NOT_MATCHES}</value>
                        <formulaid>D</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFTYPE}</macro>
                        <value>{$NET.IF.IFTYPE.MATCHES}</value>
                        <formulaid>K</formulaid>
                     </condition>
                     <condition>
                        <macro>{#IFTYPE}</macro>
                        <value>{$NET.IF.IFTYPE.NOT_MATCHES}</value>
                        <formulaid>L</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>&#33258;&#21160;&#21457;&#29616;&#32593;&#32476;&#25351;&#26631;</description>
               <item_prototypes>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Inbound packets discarded</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.13.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in.discards[ifInDiscards.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#36873;&#25321;&#20002;&#24323;&#30340;&#20837;&#31449;&#25968;&#25454;&#21253;&#30340;&#25968;&#37327;&#65292;&#21363;&#20351;&#27809;&#26377;&#26816;&#27979;&#21040;&#38169;&#35823;&#65292;&#20197;&#38450;&#27490;&#23427;&#20204;&#34987;&#20256;&#36865;&#21040;&#26356;&#39640;&#23618;&#21327;&#35758;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Inbound packets with errors</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.14.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in.errors[ifInErrors.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#23545;&#20110;&#38754;&#21521;&#25968;&#25454;&#21253;&#30340;&#25509;&#21475;&#65292;&#21253;&#21547;&#38169;&#35823;&#30340;&#20837;&#31449;&#25968;&#25454;&#21253;&#30340;&#25968;&#30446;&#65292;&#36825;&#20123;&#25968;&#25454;&#21253;&#38459;&#27490;&#23427;&#20204;&#34987;&#20256;&#36865;&#21040;&#26356;&#39640;&#23618;&#30340;&#21327;&#35758;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Bits received</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.in[ifHCInOctets.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#25509;&#25910;&#30340;&#20843;&#20301;&#23383;&#33410;&#30340;&#24635;&#25968;&#65292;&#21253;&#25324;&#24103;&#23383;&#31526;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Outbound packets discarded</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.19.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out.discards[ifOutDiscards.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#36873;&#25321;&#20002;&#24323;&#30340;&#20986;&#31449;&#25968;&#25454;&#21253;&#30340;&#25968;&#37327;&#65292;&#21363;&#20351;&#27809;&#26377;&#26816;&#27979;&#21040;&#38169;&#35823;&#65292;&#20197;&#38450;&#27490;&#23427;&#20204;&#34987;&#20256;&#36865;&#21040;&#26356;&#39640;&#23618;&#21327;&#35758;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Outbound packets with errors</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.20.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out.errors[ifOutErrors.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#23545;&#20110;&#38754;&#21521;&#25968;&#25454;&#21253;&#30340;&#25509;&#21475;&#65292;&#21253;&#21547;&#38169;&#35823;&#30340;&#20986;&#31449;&#25968;&#25454;&#21253;&#30340;&#25968;&#30446;&#65292;&#36825;&#20123;&#25968;&#25454;&#21253;&#38459;&#27490;&#23427;&#20204;&#34987;&#20256;&#36865;&#21040;&#26356;&#39640;&#23618;&#30340;&#21327;&#35758;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Bits sent</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.10.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.out[ifHCOutOctets.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <description>&#20174;&#25509;&#21475;&#20256;&#36755;&#20986;&#21435;&#30340;&#20843;&#20301;&#23383;&#33410;&#24635;&#25968;&#65292;&#21253;&#25324;&#24103;&#23383;&#31526;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>8</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Speed</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.31.1.1.1.15.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.speed[ifHighSpeed.{#SNMPINDEX}]</key>
                     <delay>3m</delay>
                     <history>7d</history>
                     <trends>0d</trends>
                     <units>bps</units>
                     <description>&#25509;&#21475;&#24403;&#21069;&#24102;&#23485;&#30340;&#20272;&#35745;&#20540;&#65292;&#21333;&#20301;&#20026;&#27599;&#31186;1000000&#20301;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>1000000</params>
                        </step>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>1h</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Operational status</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.status[ifOperStatus.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <description>&#25509;&#21475;&#30340;&#24403;&#21069;&#25805;&#20316;&#29366;&#24577;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing />
                  </item_prototype>
                  <item_prototype>
                     <name>Interface {#IFNAME}({#IFALIAS}): Interface type</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.2.2.1.3.{#SNMPINDEX}</snmp_oid>
                     <key>net.if.type[ifType.{#SNMPINDEX}]</key>
                     <delay>1h</delay>
                     <history>7d</history>
                     <trends>0d</trends>
                     <description>&#25509;&#21475;&#30340;&#31867;&#22411;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Interface {#IFNAME}({#IFALIAS})</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                           <params>1d</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Block devices discovery</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#DEVNAME},1.3.6.1.4.1.2021.13.15.1.1.2]</snmp_oid>
               <key>vfs.dev.discovery[snmp]</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>&#33258;&#21160;&#21457;&#29616;&#30913;&#30424;&#25351;&#26631;</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk read rate</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.read.rate[diskIOReads.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <description>&#33258;&#21551;&#21160;&#20197;&#26469;&#20174;&#27492;&#35774;&#22791;&#36827;&#34892;&#30340;&#35835;&#21462;&#35775;&#38382;&#25968;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk utilization</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.9.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.util[diskIOLA1.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>&#30913;&#30424;1&#20998;&#38047;&#24179;&#22343;&#36127;&#36733;&#65288;%&#65289;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing />
                  </item_prototype>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk write rate</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.write.rate[diskIOWrites.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>!w/s</units>
                     <description>&#33258;&#21551;&#21160;&#20197;&#26469;&#20174;&#35813;&#35774;&#22791;&#36827;&#34892;&#20889;&#35775;&#38382;&#30340;&#27425;&#25968;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>CPU discovery</name>
               <type>DEPENDENT</type>
               <key>cpu.discovery[snmp]</key>
               <description>&#33258;&#21160;&#21457;&#29616;&#27599;&#26680;&#24515;CPU&#24230;&#37327;{#CPU.COUNT&#35745;&#25968;}</description>
               <master_item>
                  <key>system.cpu.num[snmp]</key>
               </master_item>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of CPU cores return JSON.stringify([{"{#CPU.COUNT}": value</params>
                  </step>
               </preprocessing>
               <item_prototypes>
                  <item_prototype>
                     <name>CPU guest time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.65.0</snmp_oid>
                     <key>system.cpu.guest[ssCpuRawGuest.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>&#25805;&#20316;&#31995;&#32479;&#36816;&#34892;&#34394;&#25311;CPU&#25152;&#33457;&#36153;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU guest nice time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.66.0</snmp_oid>
                     <key>system.cpu.guest_nice[ssCpuRawGuestNice.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>&#36816;&#34892;niced guest&#65288;Linux&#20869;&#26680;&#25511;&#21046;&#19979;&#30340;guest&#25805;&#20316;&#31995;&#32479;&#30340;&#34394;&#25311;CPU&#65289;&#25152;&#33457;&#36153;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU idle time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.53.0</snmp_oid>
                     <key>system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#26080;&#25152;&#20107;&#20107;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU interrupt time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.56.0</snmp_oid>
                     <key>system.cpu.interrupt[ssCpuRawInterrupt.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#20026;&#30828;&#20214;&#20013;&#26029;&#25552;&#20379;&#26381;&#21153;&#30340;&#26102;&#38388;&#37327;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU iowait time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.54.0</snmp_oid>
                     <key>system.cpu.iowait[ssCpuRawWait.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#31561;&#24453;I/O&#23436;&#25104;&#30340;&#26102;&#38388;&#37327;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU nice time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.51.0</snmp_oid>
                     <key>system.cpu.nice[ssCpuRawNice.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#36816;&#34892;&#29992;&#25143;&#36827;&#31243;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU softirq time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.61.0</snmp_oid>
                     <key>system.cpu.softirq[ssCpuRawSoftIRQ.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#20026;&#36719;&#20214;&#20013;&#26029;&#25552;&#20379;&#26381;&#21153;&#30340;&#26102;&#38388;&#37327;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU steal time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.64.0</snmp_oid>
                     <key>system.cpu.steal[ssCpuRawSteal.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description> hypervisor&#20026;&#20854;&#20182;&#20219;&#21153;&#65288;&#20363;&#22914;&#36816;&#34892;&#21478;&#19968;&#20010;&#34394;&#25311;&#26426;&#65289;&#20174;&#36825;&#20010;&#34394;&#25311;&#26426;&#8220;&#31363;&#21462;&#8221;&#30340;CPU&#37327;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU system time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.52.0</snmp_oid>
                     <key>system.cpu.system[ssCpuRawSystem.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#36816;&#34892;&#20869;&#26680;&#21450;&#20854;&#36827;&#31243;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU user time</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.11.50.0</snmp_oid>
                     <key>system.cpu.user[ssCpuRawUser.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description> CPU&#29992;&#26469;&#36816;&#34892;&#29992;&#25143;&#36827;&#31243;&#30340;&#26102;&#38388;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params />
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU utilization</name>
                     <type>DEPENDENT</type>
                     <key>system.cpu.util[snmp,{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU&#21033;&#29992;&#29575;&#65288;%&#65289;</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//Calculate utilization return (100 - value)</params>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]</key>
                     </master_item>
                  </item_prototype>
               </item_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Mounted filesystem discovery</name>
               <type>SNMP_AGENT</type>
               <key>vfs.fs.discovery[snmp]</key>
               <snmp_oid>discovery[{#FSNAME},1.3.6.1.2.1.25.2.3.1.3,{#FSTYPE},1.3.6.1.2.1.25.2.3.1.2,{#ALLOC_UNITS},1.3.6.1.2.1.25.2.3.1.4]</snmp_oid>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                        <formulaid>C</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                        <formulaid>D</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>&#33258;&#21160;&#21457;&#29616;&#25991;&#20214;&#31995;&#32479;&#25351;&#26631;</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#FSNAME}: Free inodes in %</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.10["index","1.3.6.1.4.1.2021.9.1.2", "{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.inode.pfree[dskPercentNode.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>return (100-value);</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Space utilization</name>
                     <type>CALCULATED</type>
                     <key>vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <params>(last("vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]")/last("vfs.fs.total[hrStorageSize.{#SNMPINDEX}]"))*100</params>
                     <description>{#FSNAME}&#30340;&#31354;&#38388;&#21033;&#29992;&#29575;&#65288;%&#65289;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing />
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Total space</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.25.2.3.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.fs.total[hrStorageSize.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>&#23384;&#20648;&#22823;&#23567;&#65292;&#20197;hrStorageAllocationUnits&#20026;&#21333;&#20301;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>{#ALLOC_UNITS}</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Used space</name>
                     <type>SNMP_AGENT</type>
                     <snmp_oid>1.3.6.1.2.1.25.2.3.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>&#24050;&#20998;&#37197;&#30340;&#23384;&#20648;&#37327;&#65292;&#20197;hrStorageAllocationUnits&#20026;&#21333;&#20301;</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>{#ALLOC_UNITS}</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
            </discovery_rule>
         </discovery_rules>
         <items>
            <item>
               <name>Interrupts per second</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.11.59.0</snmp_oid>
               <key>system.cpu.intr[ssRawInterrupts.0]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params />
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Load average (1m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-1"]</snmp_oid>
               <key>system.cpu.load.avg1[laLoad.1]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Load average (5m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-5"]</snmp_oid>
               <key>system.cpu.load.avg5[laLoad.2]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Load average (15m avg)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-15"]</snmp_oid>
               <key>system.cpu.load.avg15[laLoad.3]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Number of CPUs</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.2.1.25.3.3.1.1]</snmp_oid>
               <key>system.cpu.num[snmp]</key>
               <history>7d</history>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of cores return JSON.parse(value).length;</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Context switches per second</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.11.60.0</snmp_oid>
               <key>system.cpu.switches[ssRawContexts.0]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params />
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Free swap space</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.4.0</snmp_oid>
               <key>system.swap.free[memAvailSwap.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Free swap space in %</name>
               <type>CALCULATED</type>
               <key>system.swap.pfree[snmp]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <params>last("system.swap.free[memAvailSwap.0]")/last("system.swap.total[memTotalSwap.0]")*100</params>
            </item>
            <item>
               <name>Total swap space</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.3.0</snmp_oid>
               <key>system.swap.total[memTotalSwap.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Available memory</name>
               <type>CALCULATED</type>
               <key>vm.memory.available[snmp]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <params>last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")</params>
            </item>
            <item>
               <name>memory (buffers)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.14.0</snmp_oid>
               <key>vm.memory.buffers[memBuffer.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Memory (cached)</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.15.0</snmp_oid>
               <key>vm.memory.cached[memCached.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Free memory</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.6.0</snmp_oid>
               <key>vm.memory.free[memAvailReal.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Total memory</name>
               <type>SNMP_AGENT</type>
               <snmp_oid>1.3.6.1.4.1.2021.4.5.0</snmp_oid>
               <key>vm.memory.total[memTotalReal.0]</key>
               <history>7d</history>
               <units>B</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Memory utilization</name>
               <type>CALCULATED</type>
               <key>vm.memory.util[snmp]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <params>(last("vm.memory.total[memTotalReal.0]")-(last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")))/last("vm.memory.total[memTotalReal.0]")*100</params>
            </item>
         </items>
         <macros>
            <macro>
               <macro>{$IF.ERRORS.WARN}</macro>
               <value>2.0</value>
            </macro>
            <macro>
               <macro>{$IF.UTIL.MAX}</macro>
               <value>90.0</value>
            </macro>
            <macro>
               <macro>{$IFCONTROL}</macro>
               <value>1.0</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFADMINSTATUS.MATCHES}</macro>
               <value>^.*</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFADMINSTATUS.NOT_MATCHES}</macro>
               <value>^2$</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFALIAS.MATCHES}</macro>
               <value>.*</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFALIAS.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFDESCR.MATCHES}</macro>
               <value>.*</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFDESCR.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFNAME.MATCHES}</macro>
               <value>^.*$</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
               <value>(^Software Loopback Interface|^NULL[0-9.]*$|^[Ll]o[0-9.]*$|^[Ss]ystem$|^Nu[0-9.]*$|^veth[0-9a-z]+$|docker[0-9]+|br-[a-z0-9]{12})</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFOPERSTATUS.MATCHES}</macro>
               <value>^.*$</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFOPERSTATUS.NOT_MATCHES}</macro>
               <value>^6$</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFTYPE.MATCHES}</macro>
               <value>.*</value>
            </macro>
            <macro>
               <macro>{$NET.IF.IFTYPE.NOT_MATCHES}</macro>
               <value>CHANGE_IF_NEEDED</value>
            </macro>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
               <value>.+</value>
            </macro>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
               <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|zram[0-9]*)</value>
            </macro>
            <macro>
               <macro>{$CPU.UTIL.CRIT}</macro>
               <value>90.0</value>
            </macro>
            <macro>
               <macro>{$LOAD_AVG_PER_CPU.MAX.WARN}</macro>
               <value>1.5</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
               <value>.+</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
               <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
               <value>.*(\.4|\.9|hrStorageFixedDisk|hrStorageFlashMemory)$</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
               <value>^\s$</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
               <value>10.0</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
               <value>20.0</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
               <value>90.0</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
               <value>80.0</value>
            </macro>
            <macro>
               <macro>{$MEMORY.AVAILABLE.MIN}</macro>
               <value>20M</value>
            </macro>
            <macro>
               <macro>{$MEMORY.UTIL.MAX}</macro>
               <value>90.0</value>
            </macro>
            <macro>
               <macro>{$SWAP.PFREE.MIN.WARN}</macro>
               <value>50.0</value>
            </macro>
         </macros>
      </template>
   </templates>
</zabbix_export>